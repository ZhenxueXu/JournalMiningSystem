<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:h="http://xmlns.jcp.org/jsf/html">
    <h:head>
        <meta charset="utf-8"/>
        <title>ECharts</title>
        <!-- 引入 echarts.js -->
        <script src="js/echarts.js"></script>
        <script src="js/jquery-1.9.1.min.js"></script>
        <script src="js/worldcloud.js"></script>
        <link rel="stylesheet" type="text/css" href="css/charts.css"/>
        <script src="js/esl.js"></script>
    </h:head>
    <body>
        <h:form>
            <p:growl id="error" showDetail="true"/>
            <p:outputLabel for="minTimes" value="最小引用频次:"/>
            <p:inputText id="minTimes" value="#{highRefAnalysis.minTimes}" style=" width: 40px"/>  &nbsp;           
            <p:commandButton value="分析" update="minTimes"   oncomplete="location.reload();"/>       
        </h:form>
        <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
        <div id="main"></div>
        <script type="text/javascript">
            //<![CDATA[
            // 基于准备好的dom，初始化echarts实例
            var dom = document.getElementById("main");

            var myChart = echarts.init(dom);
            var app = {};
            option = null;
            var maskImage = new Image();

            option = {
                baseOption: {
                    title: {
                        text: ""

                    },
                    tooltip: {
                        show: true
                    },
                    toolbox: {
                        feature: {
                            myTool1: {
                                show: true,
                                title: '说明',
                                icon: 'image://../images/tip.png',
                                onclick: function () {
                                    tshow('tipbox')
                                }
                            },
                            dataView: {
                                show: true,
                                readOnly: false,
                                title: '数据',
                                lang: ['数据视图', '关闭', '刷新']
                            },
                            restore: {
                                show: true,
                                title: '刷新'
                            },
                            saveAsImage: {
                                show: true,
                                title: '保存'
                            }
                        }
                    },
                    timeline: {
                        axisType: 'category',
                        playInterval: 5000,
                        x: 52,
                        y: 475,
                        width: '87%',
                        data: ['关键字', '作者', '基金', '单位', '引文年限', '引文期刊']
                    },
                    series: []

                },
                options: []
            };
            data = #{highRefAnalysis.data};
            for (var i = 0; i < 6; i++) {
                option.options.push({
                    series: [{
                            type: 'wordCloud',
                            shape: 'diamond',
                            maskImage: maskImage,
                            left: 'center',
                            top: 'center',
                            width: '100%',
                            height: '90%',
                            right: null,
                            bottom: null,
                            //sizeRange: [3, 20],
                            rotationRange: [0, 0],
                            rotationStep: 45,
                            gridSize: 8,
                            textPadding: 0,
//                        autoSize: {
//                            enable: true,
//                            minSize: 1
//                        },

                            textStyle: {
                                normal: {
                                    fontFamily: 'sans-serif',
                                    fontWeight: 'bold',
                                    color: function () {
                                        return 'rgb(' + [
                                            Math.round(Math.random() * 160),
                                            Math.round(Math.random() * 160),
                                            Math.round(Math.random() * 160)
                                        ].join(',') + ')';
                                    }
                                },
                                emphasis: {
                                    shadowBlur: 10,
                                    shadowColor: '#333'
                                }
                            },

                            data: data[i]
                        }]

                });
            }
            maskImage.onload = function () {
                myChart.setOption(option);
            };
            maskImage.src = "images/tree.jpg";
            //]]>
        </script>      
        <div id="tipbox" style="display:none; cursor:  pointer">
            <img src="images/close.png" onclick="closeed('tipbox')"/>
            <h>说明</h>
            <a class="main">  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;数据来源于论文的被引频次，首先就是用统计的方法统计出被引频次高于用户设置的高引阈值的论文，继续利用统计进一步分析高引频论文关键字、作者、基金、机构，年份和参考文献期刊的特征</a>
        </div>
        <script type="text/javascript">
            //<![CDATA[
            var prox;
            var proy;
            var proxc;
            var proyc;
            function tshow(id) {
                clearInterval(prox);
                clearInterval(proy);
                clearInterval(proxc);
                clearInterval(proyc);
                var o = document.getElementById(id);
                o.style.display = "block";
                o.style.width = "1px";
                o.style.height = "1px";
                prox = setInterval(function () {
                    openx(o, 500)
                }, 10);
            }
            function openx(o, x) {
                var cx = parseInt(o.style.width);
                if (cx < x) {
                    o.style.width = (cx + Math.ceil((x - cx) / 5)) + "px";
                } else {
                    clearInterval(prox);
                    proy = setInterval(function () {
                        openy(o, 200)
                    }, 10);
                }
            }

            function openy(o, y) {
                var cy = parseInt(o.style.height);
                if (cy < y) {
                    o.style.height = (cy + Math.ceil((y - cy) / 5)) + "px";
                } else {
                    clearInterval(proy);
                }
            }

            function closeed(id) {
                clearInterval(prox);
                clearInterval(proy);
                clearInterval(proxc);
                clearInterval(proyc);
                var o = document.getElementById(id);
                if (o.style.display == "block") {
                    proyc = setInterval(function () {
                        closey(o)
                    }, 10);
                }
            }

            function closey(o) {
                var cy = parseInt(o.style.height);
                if (cy > 0) {
                    o.style.height = (cy - Math.ceil(cy / 5)) + "px";
                } else {
                    clearInterval(proyc);
                    proxc = setInterval(function () {
                        closex(o)
                    }, 10);
                }
            }

            function closex(o) {
                var cx = parseInt(o.style.width);
                if (cx > 0) {
                    o.style.width = (cx - Math.ceil(cx / 5)) + "px";
                } else {
                    clearInterval(proxc);
                    o.style.display = "none";
                }
            }

            /*-------------------------鼠标拖动---------------------*/
            var od = document.getElementById("tipbox");
            var dx, dy, mx, my, mouseD;
            var odrag;
            var isIE = false;
            document.onmousedown = function (e) {
                var e = e ? e : event;
                if (e.button == (document.all ? 1 : 0)) {
                    mouseD = true;
                }
            }

            document.onmouseup = function () {
                mouseD = false;
                odrag = "";
                if (isIE) {
                    od.releaseCapture();
                    od.filters.alpha.opacity = 100;
                } else {
                    window.releaseEvents(od.MOUSEMOVE);
                    od.style.opacity = 1;
                }
            }


            //function readyMove(e){ 
            od.onmousedown = function (e) {
                odrag = this;
                var e = e ? e : event;
                if (e.button == (document.all ? 1 : 0)) {
                    mx = e.clientX;
                    my = e.clientY;
                    od.style.left = od.offsetLeft + "px";
                    od.style.top = od.offsetTop + "px";
                    if (isIE) {
                        od.setCapture();
                        od.filters.alpha.opacity = 50;
                    } else {
                        window.captureEvents(Event.MOUSEMOVE);
                        od.style.opacity = 0.5;
                    }
                }
            }

            document.onmousemove = function (e) {
                var e = e ? e : event;
                if (mouseD == true && odrag) {
                    var mrx = e.clientX - mx;
                    var mry = e.clientY - my;
                    od.style.left = parseInt(od.style.left) + mrx + "px";
                    od.style.top = parseInt(od.style.top) + mry + "px";
                    mx = e.clientX;
                    my = e.clientY;
                }
            }
            //]]>
        </script>

    </body>
</html>

