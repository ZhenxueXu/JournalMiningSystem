<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:h="http://xmlns.jcp.org/jsf/html">
    <h:head>
        <meta charset="utf-8"/>
        <title>ECharts</title>
        <!-- 引入 echarts.js -->
        <script src="js/echarts.js"></script>
        <script src="js/jquery-1.9.1.min.js"></script>
        <script src="js/worldcloud.js"></script>
        <link rel="stylesheet" type="text/css" href="css/charts.css"/>
        <script src="js/esl.js"></script>
    </h:head>
    <body>
        <h:form style="display: inline; top: 1px;" >
            <p:growl id="error" showDetail="true"/>
            <h:selectOneMenu id="maxYear" value="#{keywordAnalysis.minYear}" class="ui-inputfield ui-inputtext ui-widget ui-state-default ui-corner-all">
                
                <f:selectItems value="#{keywordAnalysis.menu}" />
            </h:selectOneMenu> &nbsp;至&nbsp;
            <h:selectOneMenu id="minYear" value="#{keywordAnalysis.maxYear}" class="ui-inputfield ui-inputtext ui-widget ui-state-default ui-corner-all">
                
                <f:selectItems value="#{keywordAnalysis.menu}" />
            </h:selectOneMenu>年 &nbsp;
            
            <p:commandButton value="分析" update="maxYear,minYear"  oncomplete="location.reload();" style=""/>  

        </h:form>
        <button id="divButton"  onclick="showTrend()" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"  ><span  class="ui-button-text ui-c">逐年分析</span> </button>

        <div id="main"></div>
        <script type="text/javascript">
            // 基于准备好的dom，初始化echarts实例
            var dom = document.getElementById("main");
            var myChart = echarts.init(dom);
            var app = {};
            option = null;
            var maskImage = new Image();

            option = {
                title: {
                    text: ""

                },
                tooltip: {
                    show: true
                },
                toolbox: {
                    feature: {
                        dataView: {
                            show: true,
                            readOnly: false,
                            title: '数据',
                            lang: ['数据视图', '关闭', '刷新']
                        },
                        restore: {
                            show: true,
                            title: '刷新'
                        },
                        saveAsImage: {
                            show: true,
                            title: '保存'
                        }
                    }
                },
                series: [{
                        type: 'wordCloud',
                        shape: 'diamond',
                        maskImage: maskImage,
                        left: 'center',
                        top: 'center',
                        width: '100%',
                        height: '90%',
                        right: null,
                        bottom: null,
                        //sizeRange: [12, 50],
                        rotationRange: [0, 0],
                        rotationStep: 45,
                        gridSize: 8,
                        textPadding: 0,
                        autoSize: {
                            enable: true,
                            minSize: 8
                        },

                        textStyle: {
                            normal: {
                                fontFamily: 'sans-serif',
                                fontWeight: 'bold',
                                color: function () {
                                    return 'rgb(' + [
                                        Math.round(Math.random() * 160),
                                        Math.round(Math.random() * 160),
                                        Math.round(Math.random() * 160)
                                    ].join(',') + ')';
                                }
                            },
                            emphasis: {
                                shadowBlur: 10,
                                shadowColor: '#333'
                            }
                        },

                        data: [{
                                name: '关键字',
                                value: 366,
                                textStyle: {
                                    normal: {},
                                    emphasis: {}
                                }
                            }]
                    }]
            };
            data = #{keywordAnalysis.allData};
            option.series[0].data = data;
            maskImage.onload = function () {
                myChart.setOption(option);
            };
            maskImage.src = "images/tree.jpg";

        </script>
        <script type="text/javascript">

            //<![CDATA[
            // 基于准备好的dom，初始化echarts实例
            function showTrend() {
                var dom = document.getElementById("main");
                var myChart = echarts.init(dom);
                var app = {};
                option = null;
                var maskImage = new Image();
                var timeLinedata = #{keywordAnalysis.yearData};
                var data = #{keywordAnalysis.trendData};

                option = {
                    baseOption: {
                        title: {
                            text: ""

                        },
                        timeline: {
                            axisType: 'category',
                            playInterval: 5000,
                            x: 52,
                            y: 475,
                            width: '87%',
                            data: timeLinedata
                        },
                        tooltip: {
                            show: true
                        },
                        toolbox: {
                            feature: {
                                dataView: {
                                    show: true,
                                    readOnly: false,
                                    title: '数据',
                                    lang: ['数据视图', '关闭', '刷新']
                                },
                                restore: {
                                    show: true,
                                    title: '刷新'
                                },
                                saveAsImage: {
                                    show: true,
                                    title: '保存'
                                }
                            }
                        },
                        series: []
                    },
                    options: []
                };

                for (var i = 0; i < data.length; i++) {
                    option.options.push({
                        series: [{
                                type: 'wordCloud',
                                shape: 'diamond',
                                maskImage: maskImage,
                                left: 'center',
                                top: 'center',
                                width: '100%',
                                height: '90%',
                                right: null,
                                bottom: null,
                                //sizeRange: [12, 50],
                                rotationRange: [0, 0],
                                rotationStep: 45,
                                gridSize: 8,
                                textPadding: 0,
                                autoSize: {
                                    enable: true,
                                    minSize: 8
                                },

                                textStyle: {
                                    normal: {
                                        fontFamily: 'sans-serif',
                                        fontWeight: 'bold',
                                        color: function () {
                                            return 'rgb(' + [
                                                Math.round(Math.random() * 160),
                                                Math.round(Math.random() * 160),
                                                Math.round(Math.random() * 160)
                                            ].join(',') + ')';
                                        }
                                    },
                                    emphasis: {
                                        shadowBlur: 10,
                                        shadowColor: '#333'
                                    }
                                },

                                data: data[i]
                            }]
                    }
                    );
                }
                maskImage.onload = function () {
                    myChart.setOption(option);
                };
                maskImage.src = "images/tree.jpg";
            }
            //]]>

        </script>
    </body>
</html>

