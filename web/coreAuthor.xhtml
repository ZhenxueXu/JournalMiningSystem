<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:h="http://xmlns.jcp.org/jsf/html">
    <h:head>
        <meta charset="utf-8"/>
        <title>ECharts</title>
        <!-- 引入 echarts.js -->
        <script src="js/echarts.js"></script>
        <script src="js/jquery-1.9.1.min.js"></script>
        <script src="js/echarts-graph-modularity.min.js"></script>
        <link rel="stylesheet" type="text/css" href="css/charts.css"/>
        <script src="js/worldcloud.js"></script>
        <script src="js/esl.js"></script>
    </h:head>
    <body>
        <h:form>
            <h:panelGrid columns="5">
                <p:outputLabel for="minTimes" value="最小H指数:"/>
                <p:inputText id="minTimes" value="#{authorAnalysis.min_h_index}" style=" width: 40px"/>    
                <p:outputLabel for="authors" value="作者:"/>
                <h:selectOneMenu id="authors" value="#{authorAnalysis.coreAuthor}" class="ui-inputfield ui-inputtext ui-widget ui-state-default ui-corner-all">
                    <f:selectItem itemLabel="全部" itemValue="全部" />
                    <f:selectItems value="#{authorAnalysis.core_author}" />
                </h:selectOneMenu>
                <p:commandButton value="分析" update="minTimes"   oncomplete="location.reload();"/> 

            </h:panelGrid>
            <p:growl id="error" showDetail="true"/>

        </h:form>
        <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
        <div id="main" style="width: 1100px;height:520px;"></div>
        <script type="text/javascript">
            // 基于准备好的dom，初始化echarts实例
            var dom = document.getElementById("main");
            var myChart = echarts.init(dom);
            var app = {};
            option = null;
            option = {
                title: {
                    text: '',
                    left: 'center'
                },
                tooltip: {},
                //animationDurationUpdate: 0,
                //animationEasingUpdate: 'quinticInOut',
                toolbox: {
                    feature: {
                        dataView: {
                            show: true,
                            readOnly: false,
                            title: '数据',
                            lang: ['数据视图', '关闭', '刷新']
                        },
                        restore: {
                            show: true,
                            title: '刷新'
                        },
                        saveAsImage: {
                            show: true,
                            title: '保存'
                        }
                    }
                },
                series: []

            };
            data = #{authorAnalysis.data};
            console.log(data);
            if (data.name == '图') {
                series= [{
                        type: 'graph',
                        layout: 'force',
                        modularity: true,
                        roam: true,
                        animation: true,
                        draggable: false,
                        focusNodeAdjacency: true,
                        lineStyle: {
                            normal: {
                                width: 0.5,
                                opacity: 0.7
                            }
                        },
                        label: {
                            normal: {
                                show: false,
                                position: 'top'
                            },
                            emphasis: {
                                show: true,
                                position: 'top'
                            }

                        },
//                        edgeLabel:{
//                            normal:{
//                                show:true,
//                                position:'middle',
//                                fromatter: function (params){
//                                    return params.data.weight;
//                                }
//                            }
//                            
//                        },

                        force: {
                            initLayout: 'circular',
                            // repulsion: 20,
                            edgeLength: 10,
                            repulsion: 50
                                    //gravity: 0.1
                        },
                        data: data.data,
                        // links: [],
                        links: data.links

                    }
                ];
                option.series = series;
                myChart.setOption(option);
            }
            if (data.name == '云') {
                var maskImage = new Image();
                series2= [{
                        type: 'wordCloud',
                        shape: 'diamond',
                        maskImage: maskImage,
                        left: 'center',
                        top: 'center',
                        width: '100%',
                        height: '90%',
                        right: null,
                        bottom: null,
                        //sizeRange: [12, 50],
                        rotationRange: [0, 0],
                        rotationStep: 45,
                        gridSize: 8,
                        textPadding: 0,
                        autoSize: {
                            enable: true,
                            minSize: 8
                        },
                        textStyle: {
                            normal: {
                                fontFamily: 'sans-serif',
                                fontWeight: 'bold',
                                color: function () {
                                    return 'rgb(' + [
                                        Math.round(Math.random() * 160),
                                        Math.round(Math.random() * 160),
                                        Math.round(Math.random() * 160)
                                    ].join(',') + ')';
                                }
                            },
                            emphasis: {
                                shadowBlur: 10,
                                shadowColor: '#333'
                            }
                        },
                        data: data.data[0]
                    }];
                option.series = series2;
                maskImage.onload = function () {
                    myChart.setOption(option);
                };
                maskImage.src = "images/tree.jpg";


            }
            
        </script>
    </body>
</html>

