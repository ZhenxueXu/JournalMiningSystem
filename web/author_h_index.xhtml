<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui">
    <h:head>
        <meta charset="utf-8"/>
        <title>ECharts</title>
        <!-- 引入 echarts.js -->
        <script src="js/echarts.js" charset="utf-8"></script>
        <link rel="stylesheet" type="text/css" href="css/charts.css"/>
        <link rel="stylesheet" type="text/css" href="css/tablestyle.css"/>
    </h:head>
    <h:body>

        <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
        <div id="main"></div>
        <script type="text/javascript" charset="utf-8" >
            //<![CDATA[
            // 基于准备好的dom，初始化echarts实例
            var dom = document.getElementById("main");
            var myChart = echarts.init(dom);
            var app = {};
            option = null;
            var data = #{authorAnalysis.HBar};
            console.log(data);
            var xdata = data.xAxis[0].data;
            var maindata = data.series[0].data;
            var timeLineData = new Array();
            var len = Math.ceil((xdata.length) / 20);
            var i = 1;
            while (true) {
                timeLineData[i - 1] = i;
                if (i === len) {
                    break;
                }

                i++;
            }



            option = {
                baseOption: {
                    title: {
                        text: '作者影响力',
                        x: 'center'
                    },
                    timeline: {
                        axisType: 'category',
                        playInterval: 5000,
                        x: 52,
                        y: 475,
                        width: '87%',
                        data: timeLineData
                    },

                    toolbox: {
                        feature: {
                            myTool1: {
                                show: true,
                                title: '说明',
                                icon: 'image://../images/tip.png',
                                onclick: function () {
                                    tshow('tipbox')
                                }
                            },
                            myTool: {
                                show: true,
                                title: '数据模式',
                                icon: 'image://../images/table.png',
                                onclick: function () {
                                    qclick()

                                }
                            },
                            magicType: {
                                show: true,
                                type: ['line', 'bar'],
                                title: {
                                    line: '折线图切换',
                                    bar: '柱形图切换'
                                }

                            },
                            restore: {
                                show: true,
                                title: '重置'
                            },
                            saveAsImage: {
                                show: true,
                                title: '保存'

                            }
                        }
                    },

                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'shadow'
                        }

                    },
                    legend: {
                        data: ['作者h指数'],
                        x: '200px',
                        y: '14px'
                    },
                    grid: {

                        containLabel: true
                    },
                    yAxis: {
                        type: 'value',
                        name: '数量'
                    },
                    xAxis: {
                        type: 'category',
                        name: '作者',
                        axisTick: {
                            alignWithLabel: true
                        },
                        axisLabel: {
                            rotate: -18,
                            interval: 'auto',
                            formatter: function (name) {
                                return name.length > 8 ? name.substr(0, 8) + "..." : name;
                            }
                        },
                        data: []
                    },
                    series: []
                },
                options: []
            };
            var n = 0;
            while (true) {
                option.options.push({
                    xAxis: {
                        type: 'category',
                        axisLabel: {
                            rotate: -20,
                            interval: 0
                        },
                        data: xdata.slice(n * 20, (n + 1) * 20)
                    },
                    series: [{
                            name: '作者h指数',
                            type: 'bar',
                            barGap: 20,
                            label: {
                                normal: {
                                    show: true,
                                    position: 'top'
                                }
                            },
                            data: maindata.slice(n * 20, (n + 1) * 20)
                        }]
                });
                if (n === len) {
                    break;
                }

                n++;
            }
            //]]>

            myChart.setOption(option);
        </script>

        <div id="form_div" align="center">
            <h:form id="form_style" style=" width: 880px">
                <p:dataTable id="adata" var="tabledata" value="#{authorAnalysis.gethIndex()}"
                             rows="11" paginator="true" paginatorPosition="bottom"
                             paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"
                             >
                    <p:column headerText="作者" filterBy="#{tabledata.key}" sortBy="#{tabledata.key}" filterMatchMode="contains">
                        <h:outputText value="#{tabledata.key}" />
                    </p:column>

                    <p:column headerText="h指数" filterBy="#{tabledata.value}" sortBy="#{tabledata.value}" filterMatchMode="contains">
                        <h:outputText value="#{tabledata.value}" />
                    </p:column>
                </p:dataTable>
            </h:form>
            <a href="#" ><img  type="image" src="../images/skip.png" width="25px" height="25px"  onclick="qclick()"/></a>
        </div>
        <script>
            function qclick() {
                var zt = document.getElementById("form_div").style.display;
                if (zt == "none") {
                    document.getElementById("form_div").style.display = "block";
                    document.getElementById("main").style.display = "none";
                } else {
                    document.getElementById("main").style.display = "block";
                    document.getElementById("form_div").style.display = "none";
                }

            }

        </script>
        <div id="tipbox" style="display:none; cursor:  pointer">
            <img src="images/close.png" onclick="closeed('tipbox')"/>
            <h>说明</h>
            <a class="main">  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在同一个领域的期刊中，h指数越高，表示作者的科研能力、绩效和影响力越高，在这个领域的学术贡献较大。相反h指数较低的话，表明作者的影响力和科研水平有待加强</a>
        </div>
        <script type="text/javascript">
            //<![CDATA[
            var prox;
            var proy;
            var proxc;
            var proyc;
            function tshow(id) {
                clearInterval(prox);
                clearInterval(proy);
                clearInterval(proxc);
                clearInterval(proyc);
                var o = document.getElementById(id);
                o.style.display = "block";
                o.style.width = "1px";
                o.style.height = "1px";
                prox = setInterval(function () {
                    openx(o, 500)
                }, 10);
            }
            function openx(o, x) {
                var cx = parseInt(o.style.width);
                if (cx < x) {
                    o.style.width = (cx + Math.ceil((x - cx) / 5)) + "px";
                } else {
                    clearInterval(prox);
                    proy = setInterval(function () {
                        openy(o, 200)
                    }, 10);
                }
            }

            function openy(o, y) {
                var cy = parseInt(o.style.height);
                if (cy < y) {
                    o.style.height = (cy + Math.ceil((y - cy) / 5)) + "px";
                } else {
                    clearInterval(proy);
                }
            }

            function closeed(id) {
                clearInterval(prox);
                clearInterval(proy);
                clearInterval(proxc);
                clearInterval(proyc);
                var o = document.getElementById(id);
                if (o.style.display == "block") {
                    proyc = setInterval(function () {
                        closey(o)
                    }, 10);
                }
            }

            function closey(o) {
                var cy = parseInt(o.style.height);
                if (cy > 0) {
                    o.style.height = (cy - Math.ceil(cy / 5)) + "px";
                } else {
                    clearInterval(proyc);
                    proxc = setInterval(function () {
                        closex(o)
                    }, 10);
                }
            }

            function closex(o) {
                var cx = parseInt(o.style.width);
                if (cx > 0) {
                    o.style.width = (cx - Math.ceil(cx / 5)) + "px";
                } else {
                    clearInterval(proxc);
                    o.style.display = "none";
                }
            }

            /*-------------------------鼠标拖动---------------------*/
            var od = document.getElementById("tipbox");
            var dx, dy, mx, my, mouseD;
            var odrag;
            var isIE = false;
            document.onmousedown = function (e) {
                var e = e ? e : event;
                if (e.button == (document.all ? 1 : 0)) {
                    mouseD = true;
                }
            }

            document.onmouseup = function () {
                mouseD = false;
                odrag = "";
                if (isIE) {
                    od.releaseCapture();
                    od.filters.alpha.opacity = 100;
                } else {
                    window.releaseEvents(od.MOUSEMOVE);
                    od.style.opacity = 1;
                }
            }


            //function readyMove(e){ 
            od.onmousedown = function (e) {
                odrag = this;
                var e = e ? e : event;
                if (e.button == (document.all ? 1 : 0)) {
                    mx = e.clientX;
                    my = e.clientY;
                    od.style.left = od.offsetLeft + "px";
                    od.style.top = od.offsetTop + "px";
                    if (isIE) {
                        od.setCapture();
                        od.filters.alpha.opacity = 50;
                    } else {
                        window.captureEvents(Event.MOUSEMOVE);
                        od.style.opacity = 0.5;
                    }
                }
            }

            document.onmousemove = function (e) {
                var e = e ? e : event;
                if (mouseD == true && odrag) {
                    var mrx = e.clientX - mx;
                    var mry = e.clientY - my;
                    od.style.left = parseInt(od.style.left) + mrx + "px";
                    od.style.top = parseInt(od.style.top) + mry + "px";
                    mx = e.clientX;
                    my = e.clientY;
                }
            }
            //]]>
        </script>
    </h:body>
</html>

