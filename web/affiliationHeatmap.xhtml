<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui">
    <head>
        <meta charset="utf-8"/>
        <title>ECharts</title>
        <!-- 引入 echarts.js -->
        <script src="js/echarts.js" charset="utf-8"></script>
        <script src="js/jquery-1.9.1.min.js" charset="utf-8"></script>
        <link rel="stylesheet" type="text/css" href="css/charts.css"/>
        <script src="js/esl.js" charset="utf-8"></script>
    </head>
    <body>
        <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
        <div id="main"></div>
        <script type="text/javascript" charset="utf-8">
            // 基于准备好的dom，初始化echarts实例
            var dom = document.getElementById("main");
            var data = #{affiliationHeatMap.mapData};
            console.log(data);
            var app = {};
            option = null;

            option = {

                title: {
                    text: '各科研机构发文量',
                    left: 'center',
                    textStyle: {
                        color: 'black'
                    }
                },
                tooltip: {
                    trigger: 'item',
                    formatter: function (params) {
                        return params.name + '<br/> 发文量：' + params.value[2];
                    }
                },
                toolbox: {
                    feature: {
                        dataView: {
                            show: true,
                            readOnly: false,
                            title: '数据',
                            lang: ['数据视图', '关闭', '刷新']
                        },
                        restore: {
                            show: true,
                            title: '刷新'
                        },
                        saveAsImage: {
                            show: true,
                            title: '保存'
                        }
                    }
                },
                visualMap: {
                    orient: 'vertical',
                    y: 'bottom',
                    x: 'right',
                    max: data[0].value[2],
                    dimension: 2,
                    calculable: true,
                    itemColor: 'purple',
                    precision: 0.1,
                    text: ['圆形大小：发文量'],
                    textGap: 30,
                    textStyle: {
                        color: 'black',
                        formatter: '{value}'
                    },
                    inRange: {
                        symbolSize: [4, 25],
                        color: ['purple']
                    },
                    outOfRange: {
                        symbolSize: 1,
                        color: ['#fff'],
                        opacity: 30
                    }


                },
                geo: {
                    map: 'china',
                    label: {
                        emphasis: {
                            show: true
                        }
                    },
                    roam: true,
                    itemStyle: {
                        normal: {
                            borderWidth: 0.5,
                            borderColor: '#aaa',

                        },
                        emphasis: {
                            areaColor: '#BFBFBF'
                        }
                    }
                },
                series: [
                    {
                        name: '发文量',
                        type: 'scatter',
                        coordinateSystem: 'geo',
                        data: data,
                        symbolSize: function (val) {
                            return 3 + val[2] * 30 / data[0].value[2];
                        },
                        label: {
                            normal: {
                                formatter: function (param) {
                                    return[param.name];
                                },
                                position: 'right',
                                show: false
                            },
                            emphasis: {
                                show: true
                            }
                        },
                        itemStyle: {
                            normal: {
                                color: '#ddb926'
                            }
                        }
                    },
                    {
                        name: 'Top 10',
                        type: 'effectScatter',
                        coordinateSystem: 'geo',
                        data: data.slice(0, 20),
                        symbolSize: function (val) {
                            return val[2] * 30 / data[0].value[2];
                        },
                        showEffectOn: 'render',
                        rippleEffect: {
                            brushType: 'stroke'
                        },
                        hoverAnimation: true,
                        label: {
                            normal: {
                                formatter: '{b}',
                                position: 'right',
                                show: false
                            }
                        },
                        itemStyle: {
                            normal: {
                                color: '#f4e925',
                                shadowBlur: 10,
                                shadowColor: '#333'
                            }
                        },
                        zlevel: 1
                    }
                ]
            };
            $.get('js/china.json', function (chinaJson) {
                echarts.registerMap('china', chinaJson);
                var myChart = echarts.init(dom);
                myChart.setOption(option);
            });


        </script>
    </body>
</html>

